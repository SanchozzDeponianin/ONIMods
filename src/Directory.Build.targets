<?xml version="1.0" encoding="utf-8"?>
<Project>

  <Target Name="ClearGameFolderCopyLocal" AfterTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <ReferenceCopyLocalPaths Remove="@(ReferenceCopyLocalPaths)" />
    </ItemGroup>
  </Target>

  <Target Name="SetPlatform" BeforeTargets="CoreCompile">
    <PropertyGroup>
      <PlatformTarget>AnyCPU</PlatformTarget>
    </PropertyGroup>
  </Target>

  <Target Name="CheckDependencies" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>First you need to compile the 'MSBuildTasksHelper' project.</ErrorText>
    </PropertyGroup>
    <Error Condition=" '$(DistributeMod)' == 'true' And !Exists('$(MSBuildTasksHelperDLL)') " Text="$(ErrorText)" />
  </Target>

  <!-- определяем константы для компилятора -->
  <Target Name="DefineConstants" BeforeTargets="CoreCompile">
    <PropertyGroup Condition=" '$(UsesPLib)' == 'true' ">
      <DefineConstants>$(DefineConstants);USESPLIB</DefineConstants>
    </PropertyGroup>
  </Target>

  <!-- вкоряченные ресурсы -->
  <Target Name="EmbeddedResources" BeforeTargets="PreBuildEvent">
    <ItemGroup>
      <SpriteFiles Include="$(ProjectDir)/sprites/**/*.png" />
      <AudioSheets Include="$(ProjectDir)/AudioSheets/**/*.csv" />
      <EmbeddedResource Include="@(SpriteFiles)" LogicalName="sprites/%(SpriteFiles.RecursiveDir)%(SpriteFiles.Filename)%(SpriteFiles.Extension)" />
      <EmbeddedResource Include="@(AudioSheets)" LogicalName="AudioSheets/%(AudioSheets.RecursiveDir)%(AudioSheets.Filename)%(AudioSheets.Extension)" />
      <EmbeddedResource Include="$(ProjectDir)/../SFXTagsGlobal.csv" LogicalName="SFXTagsGlobal.csv" />
      <EmbeddedResource LogicalName="$([System.String]::new('%(LogicalName)').Replace('\','/'))" />
    </ItemGroup>
  </Target>

  <!-- обновляем сведения о сборке -->
  <Target Name="AssemblyInfo" BeforeTargets="PreBuildEvent" Outputs="UpdatedAssemblyInfoFiles">
    <ItemGroup>
      <AssemblyInfoFiles Include="$(ProjectDir)/Properties/AssemblyInfo.cs"/>
    </ItemGroup>
    <MakeDir Directories="%(AssemblyInfoFiles.RelativeDir)" Condition = "!Exists('%(AssemblyInfoFiles.RelativeDir)')" />
    <Touch Files="%(AssemblyInfoFiles.RelativeDir).gitkeep" AlwaysCreate="true" />
    <Attrib Files="%(AssemblyInfoFiles.FullPath)" Normal="true" />
    <AssemblyInfo
        CodeLanguage="CS"
        OutputFile="%(AssemblyInfoFiles.FullPath)"
        AssemblyTitle="$(Title)"
        AssemblyDescription="$(Description)"
        AssemblyConfiguration="$(Configuration)"
        AssemblyCompany="$(Company)"
        AssemblyProduct="$(Product)"
        AssemblyCopyright="$(Copyright)"
        AssemblyTrademark=""
        AssemblyVersion="$(ModVersion)"
        AssemblyFileVersion="$(ModVersion)"
        ComVisible="false" >
      <Output TaskParameter="OutputFile" ItemName="UpdatedAssemblyInfoFiles"/>
    </AssemblyInfo>
    <ItemGroup>
      <Compile Include="%(UpdatedAssemblyInfoFiles.FullPath)" />
    </ItemGroup>
  </Target>

  <!-- дегенерация публицизированых длл игры -->
  <Target Name="Publicise" BeforeTargets="PreBuildEvent" Condition=" '$(DistributeMod)' == 'true' And '$(UsesPublicise)' == 'true' " >
    <ItemGroup>
      <PubliciseInputAssemblies Include="$(GameFolder)/Assembly-CSharp.dll;$(GameFolder)/Assembly-CSharp-firstpass.dll;" />
    </ItemGroup>
    <MakeDir Directories="$(PublicisedFolder)" Condition = "!Exists('$(PublicisedFolder)')" />
    <Publicise
		   InputAssemblies="@(PubliciseInputAssemblies)"
		   OutputPath="$(PublicisedFolder)"
		   PubliciseCompilerGenerated="false"/>
  </Target>

  <!-- подчищаем при очистке -->
  <Target Name="CleanPublicise" AfterTargets="Clean" Condition=" '$(DistributeMod)' == 'true' And '$(UsesPublicise)' == 'true' " >
    <RemoveDir Directories="$(PublicisedFolder)" Condition="Exists('$(PublicisedFolder)')" />
  </Target>

  <!-- вытаскиваем информацию о версии и ветке из файлов игры. для записи ямлов и вычисления конечного пути -->
  <UsingTask
    Condition=" '$(DistributeMod)' == 'true' "
    TaskName="SanchozzONIMods.GetKleiAssemblyInfo"
    AssemblyFile="$(MSBuildTasksHelperDLL)" />

  <Target Name="GetKleiAssemblyInfo" BeforeTargets="PreBuildEvent" AfterTargets="AssemblyInfo;Publicise" Condition=" '$(DistributeMod)' == 'true' ">
    <PropertyGroup>
      <AssemblyCSharp Condition=" '$(UsesPublicise)' != 'true' " >$(GameFolder)/Assembly-CSharp.dll</AssemblyCSharp>
      <AssemblyCSharp Condition=" '$(UsesPublicise)' == 'true' " >$(PublicisedFolder)/Assembly-CSharp_public.dll</AssemblyCSharp>
    </PropertyGroup>

    <SanchozzONIMods.GetKleiAssemblyInfo AssemblyCSharp="$(AssemblyCSharp)" LibraryPath="$(GameFolder)" >
      <Output TaskParameter="KleiGameVersion" PropertyName="GameVersion" />
      <Output TaskParameter="KleiBuildNumber" PropertyName="BuildNumber" />
      <Output TaskParameter="KleiBuildBranch" PropertyName="BuildBranch" />
    </SanchozzONIMods.GetKleiAssemblyInfo>
  </Target>

  <!-- создание ямлов файлов  -->
  <Target Name="WriteYamlFiles" BeforeTargets="PreBuildEvent"  AfterTargets="GetKleiAssemblyInfo" Condition=" '$(DistributeMod)' == 'true' ">
    <PropertyGroup>
      <ModInfoFile>$(IntermediateOutputPath)/mod_info.yaml</ModInfoFile>
      <ModDescriptionFile>$(IntermediateOutputPath)/mod.yaml</ModDescriptionFile>
    </PropertyGroup>

    <GenerateMetadataFiles
      OutputPath="$(IntermediateOutputPath)"

      Title="$(Title)"
      Description="$(Description)"
      StaticID="Sanchozz.ONIMods.$(AssemblyName)"
      
      SupportedContent="$(SupportedContent)"
      MinimumSupportedBuild="$(BuildNumber)"
      Version="$(ModVersion)"
      APIVersion="$(APIVersion)"
    />

    <ItemGroup>
      <FileWrites Include="$(ModInfoFile)" />
      <FileWrites Include="$(ModDescriptionFile)" />
    </ItemGroup>
  </Target>

  <!-- перепаковка вместе с PLib -->
  <!-- так как теперь PLib имеет модульную архитектуру, сделана детекция и перепаковка только нужных PLib*.dll-->
  <!-- немного грубовато, но сойдёт -->
  <UsingTask
    Condition=" '$(UsesPLib)' == 'true' "
    TaskName="SanchozzONIMods.GetReallyReferencedAssembliesAtFolder"
    AssemblyFile="$(MSBuildTasksHelperDLL)" />

  <Target Name="ILRepack" AfterTargets="Build" Condition=" '$(DistributeMod)' == 'true' And '$(UsesPLib)' == 'true' ">
    <ItemGroup>
      <InputAssemblies Include="$(TargetPath)" />
    </ItemGroup>

    <SanchozzONIMods.GetReallyReferencedAssembliesAtFolder
      AssemblyName="$(IntermediateOutputPath)/$(TargetFileName)"
      ReferencedAssembliesFolder="$(PLibFolder)" >
      <Output TaskParameter="ReallyReferencedAssemblies" ItemName="InputAssemblies" />
    </SanchozzONIMods.GetReallyReferencedAssembliesAtFolder>

    <ILRepack
        TargetPlatformVersion="v4"
        TargetKind="SameAsPrimaryAssembly"
        OutputFile="$(TargetPath)"
        InputAssemblies="@(InputAssemblies)"
        LibraryPath="$(GameFolder)"
        Internalize="true"
        XmlDocumentation="false" />
  </Target>

  <UsingTask
    Condition=" '$(DistributeMod)' == 'true' "
    TaskName="SanchozzONIMods.TestInstallFolder"
    AssemblyFile="$(MSBuildTasksHelperDLL)" />

  <!-- вычисляем целевую папку для копирования потрохов -->
  <Target Name="DetermineInstallFolder" AfterTargets="ILRepack" Condition=" '$(DistributeMod)' == 'true' ">

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
      <InstallRootFolder>$(ModOutputFolderDebug)/$(ProjectName)</InstallRootFolder>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
      <InstallRootFolder>$(ModOutputFolderRelease)/$(ProjectName)</InstallRootFolder>
    </PropertyGroup>

    <SanchozzONIMods.TestInstallFolder
      RootModInfoFile="$(InstallRootFolder)/mod_info.yaml"
      KnownGameVersionsFile="$(ProjectDir)/../KnownGameVersions.yaml"
      CurrentGameVersion="$(GameVersion)"
      CurrentBuildNumber="$(BuildNumber)" >
      <Output TaskParameter="PreviousGameVersion" PropertyName="PreviousGameVersion" />
      <Output TaskParameter="PreviousBuildNumber" PropertyName="PreviousBuildNumber" />
      <Output TaskParameter="DoInstallToRootFolder" PropertyName="DoInstallToRootFolder" />
      <Output TaskParameter="NeededArchiving" PropertyName="NeededArchiving" />
    </SanchozzONIMods.TestInstallFolder>

    <PropertyGroup Condition=" '$(DoInstallToRootFolder)' == 'true' ">
      <InstallFolder>$(InstallRootFolder)</InstallFolder>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(DoInstallToRootFolder)' != 'true' And '$(GameVersion)' == '??' ">
      <InstallFolder>$(InstallRootFolder)/archived_versions/previous_$(BuildNumber)</InstallFolder>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(DoInstallToRootFolder)' != 'true' And '$(GameVersion)' != '??' ">
      <InstallFolder>$(InstallRootFolder)/archived_versions/previous_$(GameVersion)</InstallFolder>
    </PropertyGroup>
  </Target>

  <!-- при необходимости архивируем ранее существующие потроха -->
  <Target Name="Archiving" AfterTargets="DetermineInstallFolder" Condition=" '$(DistributeMod)' == 'true' And '$(NeededArchiving)' == 'true' ">
    <Message Importance="high" Text="Found mod for Previous Game version $(PreviousGameVersion)-$(PreviousBuildNumber)" />

    <PropertyGroup Condition=" '$(PreviousGameVersion)' == '??' ">
      <ArchiveFolder>$(InstallRootFolder)/archived_versions/previous_$(PreviousBuildNumber)</ArchiveFolder>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(PreviousGameVersion)' != '??' ">
      <ArchiveFolder>$(InstallRootFolder)/archived_versions/previous_$(PreviousGameVersion)</ArchiveFolder>
    </PropertyGroup>

    <Message Importance="high" Text="Archiving into '$(ArchiveFolder)'" />

    <ItemGroup>
      <FilesToArchive Include="$(InstallRootFolder)/**/*" Exclude="$(InstallRootFolder)/archived_versions/**/*;$(InstallRootFolder)/mod.yaml" />
    </ItemGroup>

    <Move SourceFiles="@(FilesToArchive)" DestinationFiles="@(FilesToArchive->'$(ArchiveFolder)/%(RecursiveDir)%(Filename)%(Extension)')" />
  </Target>

  <!-- копируем все потроха в целевую папку -->
  <Target Name="CopyArtifactsToInstallFolder" AfterTargets="Archiving" Condition=" '$(DistributeMod)' == 'true' ">
    <Message Importance="high" Text="Installing into '$(InstallFolder)'" />

    <ItemGroup>
      <AnimFiles Include="$(ProjectDir)/anim\**/*.*" />
      <TranslationFiles Include="$(ProjectDir)/translations/*.po" />
      <TranslationFiles Include="$(ProjectDir)/translations/*.pot" />
      <WorldGenFiles Include="$(ProjectDir)/worldgen/**/*.*" />
      <YamlFiles Include="$(ProjectDir)/*.yaml" />
    </ItemGroup>

    <Copy SourceFiles="$(TargetPath)" DestinationFiles="$(InstallFolder)/$(TargetFileName)" />

    <Copy SourceFiles="@(AnimFiles)" DestinationFiles="@(AnimFiles->'$(InstallFolder)/anim/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(TranslationFiles)" DestinationFolder="$(InstallFolder)/translations" />
    <Copy SourceFiles="@(WorldGenFiles)" DestinationFiles="@(WorldGenFiles->'$(InstallFolder)/worldgen/%(RecursiveDir)%(Filename)%(Extension)')" />
    <Copy SourceFiles="@(YamlFiles)" DestinationFolder="$(InstallFolder)" />
    <Copy SourceFiles="$(ModInfoFile)" DestinationFolder="$(InstallFolder)" />
    <Copy SourceFiles="$(ModDescriptionFile)" DestinationFolder="$(InstallRootFolder)" />
    <Copy SourceFiles="$(ProjectDir)/Preview.png" DestinationFiles="$(InstallFolder)/preview.png" Condition=" $(CopyPreview) == true " />
  </Target>
</Project>
